#!/usr/bin/env bash

## Initialize stack and site (full reset)
##
## Usage: fin init

# Abort if anything fails
set -e


# PROJECT_ROOT and DOCROOT are set as env variables in cli
SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"
CONFIG_PATH="${PROJECT_ROOT}/.docksal/configs"

#-------------------------- END: Settings --------------------------------

#-------------------------- Helper functions --------------------------------

# Copy a settings file.
# Skips if the destination file already exists.
# @param $1 source file
# @param $2 destination file
copy_settings_file()
{
	local source="$1"
	local dest="$2"

	if [[ ! -f $dest ]]; then
		echo "Copying ${dest}..."
		cp $source $dest
	else
		echo "${dest} already in place."
	fi
}

#-------------------------- END: Helper functions --------------------------------

#-------------------------- Execution --------------------------------

# Fix file/folder permissions
fix_permissions ()
{
	echo "Making site directory writable..."
	chmod 755 "${SITEDIR_PATH}"
}
#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

# Convert version string like 1.2.3 to integer for comparison
# param $1 version string of 3 components max (e.g. 1.10.3)
# TODO: remove this once minimal version compatibility checking for commands is implemented in fin
ver_to_int ()
{
	local leading_zeros=$(printf "%03d%03d%03d" $(echo "$1" | tr -d '[:alpha:]' | tr -d '-' | tr '.' ' '))
	# Remove leading zeroes because otherwise bash tried to handle the number as octal which leads to errors if version contains 9
	echo "$leading_zeros" | sed "s/^0*//"
}

#-------------------------- Execution --------------------------------

# Minimum Docksal/Fin version requirement
# TODO: this should be eventually moved to fin and version requirement defined like `#: fin_minimal_version = 1.22.0`
# in the file header
fin_minimal_version="1.22.0"
if [[ $(ver_to_int $(fin -v)) < $(ver_to_int "$fin_minimal_version") ]]; then
	echo-red "Minimal fin version required is: $fin_minimal_version"
	echo -e "Please run ${yellow}fin update${NC} and try again"
	exit 1
fi

# Project initialization steps
echo -e "${green_bg} Step 1 ${NC}${green} Initializing local project configuration...${NC}"
fix_permissions

if [[ $DOCKER_RUNNING == "true" ]]; then
	echo -e "${green_bg} Step 2 ${NC}${green} Recreating services...${NC}"
	fin reset -f
else
	echo -e "${green_bg} Step 2 ${NC}${green} Creating services...${NC}"
	fin up
fi

echo -e "${green_bg} Step 3 ${NC}${green} Waiting 10s for MySQL to initialize...${NC}";
sleep 10

echo -en "${green_bg} DONE! ${NC} "
echo -e "Open ${yellow}http://${VIRTUAL_HOST}${NC} in your browser to verify the setup."


#-------------------------- END: Execution --------------------------------
